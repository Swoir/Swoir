{"noir_version":"1.0.0-beta.0+b88db67a4fa92f861329105fb732a7b1309620fe","hash":70795480461025243,"abi":{"parameters":[{"name":"words","type":{"kind":"array","length":13,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"letter","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"public"},{"name":"count","type":{"kind":"field"},"visibility":"private"}],"return_type":null,"error_types":{}},"bytecode":"H4sIAAAAAAAA/+Vd/TdUURQ9M0NR9EkkJCQk3p0P3iAhISHR9zcZlb+gPz+Xecvpeatf3t6te193LWus++q0977n7LtXZSYnJ+vw6OtX/fvc0Veh/mpXU2wvl7CXT9grJOw1JOw1JuydS9g7n7DXlLDXnLB3IWHvYsJeS8Jea31Pr0L9db7+Wgomy+XaVLFmSmY3KFb3wkpQruxNhiY0lbCyXwxLpVpYDqeqe9WpoGrKpZo5qFRLB8HJ0rWCdMu0AnFdxuEKGuS0v+IrF9MzSLcMErfGe4UJ+Aqh7lVwkzJ4X1UCg+oGqiR8WHPi5rBeEz+HFYlb473OBHydULdN3B5Wy7tNCQyqSx3WvLg5rO3i57AicWu8N5iAbxDqdojbw2p5dyiBQXX/OqxBuvVHWgnSLaiZdgJxaf3yMf3S4kT25E0S5/+lZ7rEjwuyIG5ekLfEzwsSiVvj7WYC7ibU7RG3L0jLu0cJDKpLwWqNvTOhblpd3zjO215CXQTeb8UPc+4Fagk8awPUjxqIkB50W/5NIEqLsy/7PUOduQZxMxDdET8DERK3xtvPBNxPqDsAbAYW7wElMKguBas19l7BB4N3jvO2l1Afgfd78cOcB4FaAs/aAPWjBiKkB90VPwLRUPZ7hjpzjeJmILonfgYiJG6Nd5gJeJhQdwTYDCzeI0pgUF0KVmvsg4IPBh8c520voSEC74/ihzmPArUEnrUB6kcNREgPui9+BKKx7PcMdebOiZuB6IH4GYiQuDXecSbgcULdCWAzsHhPKIFBdSlYrbGPCj4YfHKct72Exgi8P4sf5hwAtQSetQHqRw1ESA8y4kcgKma/Z6gzd17cDEQl8TMQIXFrvGUm4DKhbgXYDCzeFSUwqC4FqzX2QPDB4IvjvO3NUSTw/ip+mPMkUEvgWRugftRAhPSgKfEjEIXZ7xnqzDWJm4GoKn4GIiRujXeaCXiaUHcG2Aws3jNKYFBdClZr7JOCDwa7jvO2l1BI4L0nfpjzLFBL4FkboH7UQIT0oIfiRyCay37PUGeuWdwMRI/Ez0CExK3xzrMBo+suAJuBxXshQeAg5WJgtcY+K/hg8M1x3vYSmiPw3hc/zHkRqCXwrA1QP2ogQnrQYxJndM8sZb9nqDN3QdwMRE/Ez0CExK3xLjMBLxPqrgCbgcV7RQkMqkvBao19UfDBoOY4b3sJLRF4H4gf5rwK1BJ41gaoHzUQIT3oqfgRiNay3zPUmbsobgaiZ+JnIELi1njXmYDXCXU3gM3A4r2hBAbVpWC1xr4q+GDw3XHe9hJaI/D+IX6Y8yZQS+BZG6B+1ECE9KDn4kcg2sp+z1BnrkXcDEQvxM9AhMSt8W4zAW8T6u4Am4HFe0cJDKpLwWqNfVPwweCn47ztJbRF4H0ofpjzS6CWwLM2QP2ogQjpQa/Ej0D0Ovs9EyT1SpBuHd9XyHmz/WLPAu1dlwQbMKJwdElOV66ub6H+3L43k307gujDsez/s7L/tGj/Nq2l/nsjnq1ydkXPmmOv7eo58h3Co/ptnPrHP4kYX+3q+7YYz7x6Ng/CENWL/KNRzq587Fn0a5ti+HJ4fCaOpZDwZ0Ur+gwd/bEvkZ6/AbXvIgg9bgAA","debug_symbols":"ldjBisIwEIDhd8nZQyaZZBJfZVmWqlUKpZVaFxbx3beKgrt4+W/G8heGD+3Qi9u1m/Phqxv248mtPy6uH7fN3I3Dcro40ft3p2Mz3I6nuZlmt5agK9cOu+WTpuvK7bu+descrp8rJwkXGReGi4KLSovgcSG4CLiIuMDmAZuH9+bZPwsL/wvDRcEFNo/YPGLziM1jpJNHxUXCBTaP2Dzi33nE5orNFZtroJMrNldsrthcsbni/3bF5orNEzZPQidP2Dxh84TNEzZP+HmesHnC5gmbZ08nz9g8Y/OMzTM2z/h5nrF5xuYZm+dKJzdsbtjcsLlhc8M7nGFzw+aGzQ3vcIbNCzYv2Lxg84L39oLNCzYv2LzgHa5g84LNKzav2Lzivb1i84rNKzaveIer2Lxi84rNxXue4M1dfOBJ5Al/MeMTHz/zxHhSeML1Ba/wIlxfuL5wfVE+PtcXri9cX7j++3dzwcsjCWJ/kuWwmbq+7w5fr283l6+/m6lrNn37OO7Pw/bl6vxzfF559sdp3La789Te7nS/ttz+Fw==","file_map":{"62":{"source":"fn main(words: [u8; 13], letter: pub u8, count: Field) {\n    let mut counter = 0;\n    for word_letter in words {\n        if word_letter == letter {\n            counter += 1;\n        }\n    }\n    assert(counter == count);\n}\n\n#[test]\nfn test_main() {\n    // Hello, world!\n    let words: [u8; 13] = [0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x21];\n    // l\n    let letter = 0x6c;\n    // l occurs 3 times\n    let count = 3;\n\n    main(words, letter, count);\n}\n","path":"/Users/madztheo/Documents/Ocelots/libs/Swoir/Tests/SwoirTests/Fixtures/contracts/count_letters/src/main.nr"}},"names":["main"],"brillig_names":["directive_invert"]}