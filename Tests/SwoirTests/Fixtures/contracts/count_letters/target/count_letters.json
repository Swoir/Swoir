{"noir_version":"0.35.0+2a0d211b92d002fa75855d4ba27267f8892dd52c","hash":14549889977546451046,"abi":{"parameters":[{"name":"words","type":{"kind":"array","length":13,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"letter","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"public"},{"name":"count","type":{"kind":"field"},"visibility":"private"}],"return_type":null,"error_types":{}},"bytecode":"H4sIAAAAAAAA/+VdaU9UQRDsXUBBwQvwPhAQARHe7AFvAREQAREQAdFEExUBTTTRRBONmmj85dKyG9r1xS9bZWaek5Al82JbVdNdU9wZ2Vs/dt8+l9/P7L7VlV91NVbtZRL2sgl7dQl79Ql7DQl7BxL2DibsNSbsNSXsHUrYO5yw15yw11Les6uu/DpZfs1Hw4XC9khu2+Xd8yhX2oyLUaG4ORy72BXj4lYuzue340I8UtosjUQlV8hvu51iKb8T7S1bK6ptuRYgrqM4XFGD7PdX9cpU6RnVthwSt8V7jAn4GKHucXCTMngfNwKD6kamJHxYM+LnsJ6QMIcVidvibWUCbiXUbRO/h1V5txmBQXWpw5oVP4e1XcIcViRui/ckE/BJQt1T4vewKu9TRmBQ3b8Oa1Tb+i2tRLUtqJmeBuKy+mWr9KsVJ7Inz5A4/y89c1bCuCDrxM8L8pyEeUEicVu855mAzxPqXhC/L0jlfcEIDKpLwarGfjqhbq26PvSct15CZwm8H0kY5nwRqCXwrB1QP2ogQnrQJfk3gahWnB3p7xnqzNWLn4HosoQZiJC4Ld5OJuBOQt0uYDOweHcZgUF1KVjV2C8KPhg89py3XkIdBN5PJAxz7gZqCTxrB9SPGoiQHnRFwghEPenvGerMNYifgeiqhBmIkLgt3l4m4F5C3T5gM7B49xmBQXUpWNXYuwUfDJ56zlsvoR4C72cShjn3A7UEnrUD6kcNREgPuiZhBKKB9PcMdeYOiJ+B6LqEGYiQuC3eQSbgQULdIWAzsHgPGYFBdSlY1dj7BR8MXnjOWy+hAQLvLQnDnCOglsCzdkD9qIEI6UFOwghEufT3DHXmDoqfgSgvYQYiJG6Lt8AEXCDULQKbgcW7aAQG1aVgVWOPBB8MXnrOW2+OHIH3KwnDnIeBWgLP2gH1owYipAeNSBiBKE5/z1BnrlH8DEQlCTMQIXFbvKNMwKOEumPAZmDxHjMCg+pSsKqxDws+GLz2nLdeQjGB9xsJw5zHgVoCz9oB9aMGIqQH3ZAwAtFE+nuGOnNN4mcguilhBiIkbot3kg0YXXcK2Aws3lMJAkc1LgZWNfZxwQeDt57z1ktogsD7nYRhztNALYFn7YD6UQMR0oNukTije2Ym/T1DnblD4mcgui1hBiIkbot3lgl4llB3DtgMLN5zRmBQXQpWNfZpwQeD957z1ktohsD7g4RhzvNALYFn7YD6UQMR0oPuSBiBaCH9PUOducPiZyC6K2EGIiRui3eRCXiRUHcJ2Aws3ktGYFBdClY19nnBB4OPnvPWS2iBwPuThGHOy0AtgWftgPpRAxHSg+5JGIFoJf09Q525ZvEzEN2XMAMRErfFu8oEvEqouwZsBhbvNSMwqC4Fqxr7suCDwRfPeesltELg/VXCMOd1oJbAs3ZA/aiBCOlBDySMQLSR/p6heI32yrrgveab57y1rzcIvL9LGB57BKgl8KwdUj892/pyrSNGS93PljXV5xqU9ddOVP4Imn4/nX4JWT9r2lz+t5U+aZGEVXnYZF7bzDPkbz3V2u2c2r9+1LSyKvjbDaeseY76P0X2m7vB1M+avcrzRoMlg8fyxwVV/ZFTq3m/8uwnW5Kt9eZvAAA=","debug_symbols":"ldjRasIwFIDhd8m1FznJSU7iq4whVasUShWtg1F893WbA5Ey+O9syy8cPrSHTG7fbm/HTTccTle3fptcf9o1Y3ca5qvJif7cu56b4fvyOjaX0a0l6Mq1w37+pOm+coeub93a/P195SThIuPCcFFwUWkRPC4EFwEXERfYPGDzsGye/V9h4bUwXBRcYPOIzSM2j9g8Rjp5VFwkXGDziM0j/p1HbK7YXLG5Bjq5YnPF5orNFZsr/m9XbK7YPGHzJHTyhM0TNk/YPGHzhN/nCZsnbJ6wefZ08ozNMzbP2Dxj84zf5xmbZ2yesXmudHLD5obNDZsbNje8wxk2N2xu2NzwDmfYvGDzgs0LNi94by/YvGDzgs0L3uEKNi/YvGLzis0r3tsrNq/YvGLzine4is0rNq/YXLznCd7cxQeeRJ7wgxmf+PiZJ8aTwhOuL3iFF+H6wvWF64vy8bm+cH3h+sL1l8/mgpdHEsRek+XDuf8TYcl8sb10fd8dN89nqPPtj+bSNdu+fVwebsPu6en4ef59Mn/FFw==","file_map":{"70":{"source":"fn main(words: [u8; 13], letter: pub u8, count: Field) {\n    let mut counter = 0;\n    for word_letter in words {\n        if word_letter == letter {\n            counter += 1;\n        }\n    }\n    assert(counter == count);\n}\n\n#[test]\nfn test_main() {\n    // Hello, world!\n    let words: [u8; 13] = [0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x21];\n    // l\n    let letter = 0x6c;\n    // l occurs 3 times\n    let count = 3;\n\n    main(words, letter, count);\n}\n","path":"/Users/madztheo/Documents/Ocelots/libs/Swoir/Tests/SwoirTests/Fixtures/contracts/count_letters/src/main.nr"}},"names":["main"],"brillig_names":["directive_invert"]}