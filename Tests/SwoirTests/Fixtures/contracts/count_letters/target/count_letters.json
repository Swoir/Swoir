{"noir_version":"0.36.0+801c71880ecf8386a26737a5d8bb5b4cb164b2ab","hash":10946664904539328910,"abi":{"parameters":[{"name":"words","type":{"kind":"array","length":13,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"letter","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"public"},{"name":"count","type":{"kind":"field"},"visibility":"private"}],"return_type":null,"error_types":{}},"bytecode":"H4sIAAAAAAAA/+VdaU8UQRR8uwsKCl6A932fML0HzAIiIAIiIAKiiSYqAppoookmGjXR+MvlyU58jhO/bJXpHjshS3r0UVX9XnWFsyBb6/vm26fG+4XNt1LjVVdbaq+QsVfM2Ctl7LVk7LVm7G3L2NuesdeWsdeesbcjY29nxl5Hxl5nY8+uUuN1tPFaifqr1fWB8rqruGdRub4a16JqbbU/drGrxbW1clyprMfVeKC+Wh+I6q5aWXcbtXplI9patlbU3HKdQFy7cbiiVvnVX+lVSOkZNbccErfFu4cJeA+h7l5wkzJ47zUCg+pGpiR8WAvi57DukzCHFYnb4u1iAu4i1O0Wv4dVeXcbgUF1qcNaFD+HtUfCHFYkbot3PxPwfkLdA+L3sCrvA0ZgUN2/DmvU3PotrUTNLaiZHgTisvoVU/o1ixPZk4dInP+XnjksYVyQJfHzgjwiYV6QSNwW71Em4KOEusfE7wtSeR8zAoPqUrCqsR/MqNusrg88562X0GEC74cShjkfB2oJPGsH1I8aiJAedEL+TSBqFufJ/PcMdeZaxM9AdErCDERI3BbvaSbg04S6Z4DNwOJ9xggMqkvBqsZ+XPDB4JHnvPUSOkng/VjCMOezQC2BZ+2A+lEDEdKDzkkYgeh8/nuGOnOt4mcguiBhBiIkbov3IhPwRULdS8BmYPG+ZAQG1aVgVWM/K/hg8MRz3noJnSfwfiphmPNloJbAs3ZA/aiBCOlBVySMQHQ1/z1Dnblt4mcguiZhBiIkbou3lwm4l1C3D9gMLN59RmBQXQpWNfbLgg8Gzz3nrZfQVQLvNQnDnCOglsCzdkD9qIEI6UFOwghE5fz3DHXmtoufgagiYQYiJG6Lt8oEXCXUrQGbgcW7ZgQG1aVgVWOPBB8MXnjOW2+OMoH3SwnDnPuBWgLP2gH1owYipAcNSBiBKM5/z1Bnrk38DER1CTMQIXFbvINMwIOEukPAZmDxHjICg+pSsKqx9ws+GLzynLdeQjGB92sJw5yHgVoCz9oB9aMGIqQHXZcwAtFI/nuGOnPt4mcguiFhBiIkbot3lA0YXXcM2Aws3mMZAkdNLgZWNfZhwQeDN57z1ktohMD7rYRhzuNALYFn7YD6UQMR0oNukjije2Yi/z1Dnbkd4mcguiVhBiIkbot3kgl4klB3CtgMLN5TRmBQXQpWNfZxwQeDd57z1ktogsD7vYRhztNALYFn7YD6UQMR0oNuSxiBaCb/PUOduZ3iZyC6I2EGIiRui3eWCXiWUHcO2Aws3nNGYFBdClY19mnBB4MPnvPWS2iGwPujhGHO80AtgWftgPpRAxHSg+5KGIFoIf89Q525DvEzEN2TMAMRErfFu8gEvEiouwRsBhbvJSMwqC4Fqxr7vOCDwWfPeesltEDg/UXCMOdloJbAs3ZA/aiBCOlB9yWMQLSS/56heI32yrLgvear57y1r1cIvL9JGB67C6gl8KwdUj8925ZGrV1GS90vNjTV5xqU9ddOJH8ETb+fTr+ErJ817Wj836RPOiVjJQ/bU6/d5jnyV8En9Xs49X/+yGl62b9N05PiWTTPRkEYknpJ47fKn6uYepb827YUvgIen0tjKWV8rGR1mfeT5z8ARwS3/h5wAAA=","debug_symbols":"ldjRasIwFIDhd8m1FznJSU7iq4whVasUShWtg1F893WbA5Ey+O9syy8cPrSHTG7fbm/HTTccTle3fptcf9o1Y3ca5qvJif7cu56b4fvyOjaX0a0l6Mq1w37+pOm+coeub93a/P195SThIuPCcFFwUWkRPC4EFwEXERfYPGDzsGye/V9h4bUwXBRcYPOIzSM2j9g8Rjp5VFwkXGDziM0j/p1HbK7YXLG5Bjq5YnPF5orNFZsr/m9XbK7YPGHzJHTyhM0TNk/YPGHzhN/nCZsnbJ6wefZ08ozNMzbP2Dxj84zf5xmbZ2yesXmudHLD5obNDZsbNje8wxk2N2xu2NzwDmfYvGDzgs0LNi94by/YvGDzgs0L3uEKNi/YvGLzis0r3tsrNq/YvGLzine4is0rNq/YXLznCd7cxQeeRJ7wgxmf+PiZJ8aTwhOuL3iFF+H6wvWF64vy8bm+cH3h+sL1l8/mgpdHEsRek+XDuf8TYcl8sb10fd8dN89nqPPtj+bSNdu+fVwebsPu6en4ef59Mn/FFw==","file_map":{"70":{"source":"fn main(words: [u8; 13], letter: pub u8, count: Field) {\n    let mut counter = 0;\n    for word_letter in words {\n        if word_letter == letter {\n            counter += 1;\n        }\n    }\n    assert(counter == count);\n}\n\n#[test]\nfn test_main() {\n    // Hello, world!\n    let words: [u8; 13] = [0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x21];\n    // l\n    let letter = 0x6c;\n    // l occurs 3 times\n    let count = 3;\n\n    main(words, letter, count);\n}\n","path":"/Users/madztheo/Documents/Ocelots/libs/Swoir/Tests/SwoirTests/Fixtures/contracts/count_letters/src/main.nr"}},"names":["main"],"brillig_names":["directive_invert"]}