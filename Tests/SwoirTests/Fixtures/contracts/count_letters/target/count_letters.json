{"noir_version":"1.0.0-beta.7+913ee6308f6ea040608df452a66bcb20bece3ca6","hash":"10191320655314649801","abi":{"parameters":[{"name":"words","type":{"kind":"array","length":13,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"letter","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"public"},{"name":"count","type":{"kind":"field"},"visibility":"private"}],"return_type":null,"error_types":{}},"bytecode":"H4sIAAAAAAAA/+VdZ3MTPRhc2wlJIOElLwm9987JJTlTQ++9dwg4lF/AzwfB3fCM0bfb9UiHZjzn0SWb3dWjRztJxtfA7/Ht5+t78b7x89Uqrn5MDs01AnPNwFwrMDcWmBsPzK0KzE0E5iYDc1OBudWBuTWBuenA3EwxZ0eruC4V16zacBarky10u4PF9sB13Ies3V/Oe1m3t7yQu9z18t6ndt7pDPJuvthf7i9mfdftDNxKr99ZKcBmiFj/8TRmY/hTX8OjQfaTydvyXackvE6AO0ssBpXuWWMwCTczkPTN2kCcm/V/pLlZmbwt3/VKwusFuHOIe7N63XPGYBKudLM2EedmnUeam5XJ2/LdoCS8QYC7EXFvVq97ozGYhCvdrLOIs5luIvKy/jWH/KvKk1mTm0Wa/5Wa2YI09lwLcR6QW5HmAcnkbfluUxLeJsDdjrgPSK97uzGYhCvh6hv7pgBuVV+fRa7bH0JbBLqfYzTNuSrPHUQviWvtiP5JAxGzB+3EaAJRVZ676l8z0kA0hjgD0W6kGYiYvC3fPUrCewS4e4nFoNK91xhMwpVw9Y19B/jB4EXkuv0htEug+yVG05yr8txH9JK41o7onzQQMXvQfqQRiA7Uv2akgWgccQaig0gzEDF5W76HlIQPCXAPE4tBpfuwMZiEK+HqG/s+8IPBq8h1+0PogED3ayCJQHSE6CVxrR3RP2kgYvago0gjEB2rf81IA9EqxBmIjiPNQMTkbfmeUBI+IcA9SSwGle6TxmASroSrb+xHwA8GbyLX7Q+hYwLdb4EkAlFG9JK41o7onzQQMXuQQxqBqF3/mpEGognEGYg6SDMQMXlbvl0l4a4At0csBpXunjGYhCvh6ht7Bn4weBe5bn9ytAW63wNJBKIFopfEtXZE/6SBiNmDFpFGIMrrXzPSQDSJOANRH2kGIiZvy/eUkvApAe5pYjGodJ82BpNwJVx9Y18APxh8iFy3P4Ryge5ljKY5V+V5huglca0d0T9pIGL2oLNIIxCdq3/NSAPRFOIMROeRZiBi8rZ8l9SE2bgXiMWg0n0hYHBWcSi4+sZ+Bvxg8DFy3f4QOifQ/Qmjac5VeV4keklca0f0TxqImD3okkgzu2Yu179mpIFoNeIMRFeQZiBi8rZ8ryoJXxXgXiMWg0r3NWMwCVfC1Tf2i+AHg0Hkuv0hdFmgewWjac5VeV4neklca0f0TxqImD3oBtIIRDfrXzPSQLQGcQaiW0gzEDF5W763lYRvC3DvEItBpfuOMZiEK+HqG/t18IPB58h1+0PopkD3FyCJQHSX6CVxrR3RP2kgYvage0gjEN2vf81IA9E04gxED5BmIGLytnwfKgk/FOA+IhaDSvcjYzAJV8LVN/a74AeDr5Hr9ofQfYHub0ASgegx0UviWjuif9JAxOxBT5BGIHpa/5rJQrWSVRu/zivmfvP14teC3bvWghswynC0Fn9Go/C3Vdz3n83kP46gfDiW/z8r/6dF/9u06eJ7S50z+HuU96aGrvPmfovofYk/p8HPJgIa5837uSGdTXNvicShxCv7xzj+Hs2he+XXTg7xa/D5uWEurcDPKkf5DB372JfSzx/D4BmZPW4AAA==","debug_symbols":"ndTfaqtAEMfxd/Hai539v32VwyGYxBRBTLB64BDy7t34HWl7USi9+kV35oOZ1b035/64vh6G6XJ9a17+3JvjPIzj8HoYr6duGa5TvXt/tM1+eVjmvq+3mk/rtevWzf20NC/TOo5t868b163o7dZNWy7dXFdN2/TTuWYFL8PYP3892o9u832rmKDNIh/t4ef91u/9PvymP+4PL8n+ot8a0X4r6Uv/33rVnYb5y8Qb8bWybSQQkUhEJsoW1hBCWMIRKBbFVsXVSEQmUByKQ3Eozm0lzhOBQHEojmdxKB7Fo3i7lXgUj+JRPIrnH3kUjxJQgmwlASWgBJSAEphLQAkoASWarSSiRJSIElEic4koESWixLKVJJSEklASSmK6CSWhJJTEdBNKRskoGSWzRxklo2SUzHQzSkYpKAWlsEcFpaAUlMJ0C0pBKShijCa7JMZqOk199UzQuqiZNLOmesJ2iagn6ol64rVOPVFP1BP1nu+zfzw/oXnojmOvJ89lnU6fDqLl/21f2Y+q23w99ed17p+f0LZWP6p3","file_map":{"50":{"source":"fn main(words: [u8; 13], letter: pub u8, count: Field) {\n    let mut counter = 0;\n    for word_letter in words {\n        if word_letter == letter {\n            counter += 1;\n        }\n    }\n    assert(counter == count);\n}\n\n#[test]\nfn test_main() {\n    // Hello, world!\n    let words: [u8; 13] = [0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x21];\n    // l\n    let letter = 0x6c;\n    // l occurs 3 times\n    let count = 3;\n\n    main(words, letter, count);\n}\n","path":"/Users/madztheo/Documents/Ocelots/libs/Swoir/Tests/SwoirTests/Fixtures/contracts/count_letters/src/main.nr"}},"names":["main"],"brillig_names":["directive_invert"]}